const fs = require('fs');
const path = require('path');

console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
function checkFileSizes() {
  console.log('üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤:');
  console.log('='.repeat(50));
  
  const audioDir = path.join(__dirname, '../public/audio');
  const optimizedDir = path.join(__dirname, '../public/audio-optimized');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
  if (fs.existsSync(audioDir)) {
    const files = fs.readdirSync(audioDir).filter(f => f.endsWith('.mp3'));
    let totalSize = 0;
    
    files.forEach(file => {
      const filePath = path.join(audioDir, file);
      const sizeMB = (fs.statSync(filePath).size / (1024 * 1024)).toFixed(2);
      totalSize += parseFloat(sizeMB);
      console.log(`üìÅ ${file}: ${sizeMB} MB`);
    });
    
    console.log(`üìà –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${totalSize.toFixed(2)} MB`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
  if (fs.existsSync(optimizedDir)) {
    console.log('\nüîß –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    const optimizedFiles = fs.readdirSync(optimizedDir).filter(f => f.endsWith('.mp3'));
    let optimizedSize = 0;
    
    optimizedFiles.forEach(file => {
      const filePath = path.join(optimizedDir, file);
      const sizeMB = (fs.statSync(filePath).size / (1024 * 1024)).toFixed(2);
      optimizedSize += parseFloat(sizeMB);
      console.log(`‚úÖ ${file}: ${sizeMB} MB`);
    });
    
    console.log(`üìà –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${optimizedSize.toFixed(2)} MB`);
    
    if (optimizedSize > 0) {
      const savings = ((totalSize - optimizedSize) / totalSize * 100).toFixed(1);
      console.log(`üí∞ –≠–∫–æ–Ω–æ–º–∏—è: ${savings}% (${(totalSize - optimizedSize).toFixed(2)} MB)`);
    }
  }
  
  console.log('='.repeat(50));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Next.js
function checkNextConfig() {
  console.log('\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Next.js:');
  console.log('='.repeat(50));
  
  const configPath = path.join(__dirname, '../next.config.mjs');
  
  if (fs.existsSync(configPath)) {
    const config = fs.readFileSync(configPath, 'utf8');
    
    const optimizations = [
      { name: '–°–∂–∞—Ç–∏–µ gzip', pattern: /compress:\s*true/ },
      { name: 'SWC –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è', pattern: /swcMinify:\s*true/ },
      { name: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è CSS', pattern: /optimizeCss:\s*true/ },
      { name: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤', pattern: /optimizePackageImports/ },
      { name: '–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —á–∞–Ω–∫–æ–≤', pattern: /splitChunks/ }
    ];
    
    optimizations.forEach(opt => {
      const isEnabled = opt.pattern.test(config);
      console.log(`${isEnabled ? '‚úÖ' : '‚ùå'} ${opt.name}: ${isEnabled ? '–í–∫–ª—é—á–µ–Ω–æ' : '–û—Ç–∫–ª—é—á–µ–Ω–æ'}`);
    });
  }
  
  console.log('='.repeat(50));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function checkComponents() {
  console.log('\nüß© –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
  console.log('='.repeat(50));
  
  const components = [
    { name: 'AudioPlayer', path: '../components/audio-player.tsx' },
    { name: 'VoiceCasesSection', path: '../components/voice-cases-section.tsx' },
    { name: 'LoadingSkeleton', path: '../components/loading-skeleton.tsx' }
  ];
  
  components.forEach(comp => {
    const fullPath = path.join(__dirname, comp.path);
    const exists = fs.existsSync(fullPath);
    console.log(`${exists ? '‚úÖ' : '‚ùå'} ${comp.name}: ${exists ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
  });
  
  console.log('='.repeat(50));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
function generateReport() {
  console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
  console.log('='.repeat(50));
  
  console.log('1. üéµ –°–æ–∂–º–∏—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã:');
  console.log('   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/optimize-audio.js');
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ FFmpeg –¥–ª—è —Å–∂–∞—Ç–∏—è');
  console.log('   - –¶–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: <300KB –Ω–∞ —Ñ–∞–π–ª');
  
  console.log('\n2. üñºÔ∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WebP —Ñ–æ—Ä–º–∞—Ç');
  console.log('   - –°–∂–∏–º–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
  console.log('   - –î–æ–±–∞–≤—å—Ç–µ lazy loading');
  
  console.log('\n3. üì¶ –£–¥–∞–ª–∏—Ç–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:');
  console.log('   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run build');
  console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ bundle analyzer');
  console.log('   - –£–¥–∞–ª–∏—Ç–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã');
  
  console.log('\n4. üöÄ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CDN:');
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Vercel CDN');
  console.log('   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ');
  console.log('   - –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã');
  
  console.log('\n5. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Lighthouse');
  console.log('   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Web Vitals');
  console.log('   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ Core Web Vitals');
  
  console.log('='.repeat(50));
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
checkFileSizes();
checkNextConfig();
checkComponents();
generateReport();

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –°–æ–∂–º–∏—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã —Å –ø–æ–º–æ—â—å—é FFmpeg');
console.log('2. –ó–∞–º–µ–Ω–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏');
console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run build –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
console.log('5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Lighthouse –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞—É–¥–∏—Ç–∞');
