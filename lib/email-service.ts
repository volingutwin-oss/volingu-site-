import { Resend } from 'resend'

const resend = new Resend(process.env.RESEND_API_KEY)

export interface EmailData {
  name: string
  email: string
  phone: string
  company?: string
  employees?: string
  service?: string
  budget?: string
  message?: string
}

export async function sendEmailNotification(data: EmailData) {
  try {
    // –ï—Å–ª–∏ –Ω–µ—Ç API –∫–ª—é—á–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
    if (!process.env.RESEND_API_KEY) {
      console.log('üìß EMAIL –£–í–ï–î–û–ú–õ–ï–ù–ò–ï (–±–µ–∑ API):')
      console.log(`üë§ –ò–º—è: ${data.name}`)
      console.log(`üìß Email: ${data.email}`)
      console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${data.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`)
      console.log(`üíº –£—Å–ª—É–≥–∞: ${data.service || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`)
      console.log(`üí∞ –ë—é–¥–∂–µ—Ç: ${data.budget || '–ù–µ —É–∫–∞–∑–∞–Ω'}`)
      console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'}`)
      return { success: true, message: 'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (fallback)' }
    }

    console.log('üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω:', process.env.RESEND_API_KEY.substring(0, 10) + '...')

    const emailHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #333; border-bottom: 2px solid #667eea; padding-bottom: 10px;">
          üöÄ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ Volingu
        </h2>
        
        <div style="background: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #667eea; margin-top: 0;">üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          <p><strong>–ò–º—è:</strong> ${data.name}</p>
          <p><strong>Email:</strong> ${data.email}</p>
          ${data.phone ? `<p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${data.phone}</p>` : ''}
          ${data.company ? `<p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${data.company}</p>` : ''}
        </div>

        <div style="background: #e0f2fe; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #0284c7; margin-top: 0;">üíº –î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏</h3>
          ${data.service ? `<p><strong>–£—Å–ª—É–≥–∞:</strong> ${data.service}</p>` : ''}
          ${data.employees ? `<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:</strong> ${data.employees}</p>` : ''}
          ${data.budget ? `<p><strong>–ë—é–¥–∂–µ—Ç:</strong> ${data.budget}</p>` : ''}
        </div>

        ${data.message ? `
        <div style="background: #f0f9ff; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #0369a1; margin-top: 0;">üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ</h3>
          <p style="white-space: pre-wrap;">${data.message}</p>
        </div>
        ` : ''}

        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            ü§ñ –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ Volingu<br>
            –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
          </p>
        </div>
      </div>
    `

    const result = await resend.emails.send({
      from: 'onboarding@resend.dev',
      to: [process.env.ADMIN_EMAIL || 'volingutwin@gmail.com'],
      subject: `üöÄ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${data.name} - Volingu`,
      html: emailHtml,
    })

    console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', result.data?.id)
    console.log('üìß –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç Resend:', JSON.stringify(result, null, 2))
    return { success: true, message: 'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', id: result.data?.id }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error)
    
    // Fallback - –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    console.log('üìß FALLBACK EMAIL –£–í–ï–î–û–ú–õ–ï–ù–ò–ï:')
    console.log(`üë§ –ò–º—è: ${data.name}`)
    console.log(`üìß Email: ${data.email}`)
    console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${data.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`)
    console.log(`üíº –£—Å–ª—É–≥–∞: ${data.service || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`)
    console.log(`üí∞ –ë—é–¥–∂–µ—Ç: ${data.budget || '–ù–µ —É–∫–∞–∑–∞–Ω'}`)
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'}`)
    
    return { success: true, message: 'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (fallback)' }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É
export async function sendClientConfirmation(data: EmailData) {
  try {
    console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É:', data.email)
    
    if (!process.env.RESEND_API_KEY) {
      console.log('üìß –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É (–±–µ–∑ API):', data.email)
      return { success: true, message: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (fallback)' }
    }

    console.log('üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É')

    const confirmationHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #667eea; text-align: center;">
          ü§ñ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ Volingu!
        </h2>
        
        <div style="background: linear-gradient(135deg, #667eea 0%, #5a67d8 100%); color: white; padding: 30px; border-radius: 12px; text-align: center; margin: 20px 0;">
          <h3 style="margin: 0; font-size: 24px;">–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</h3>
          <p style="margin: 10px 0 0 0; opacity: 0.9;">–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞</p>
        </div>

        <div style="background: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #333; margin-top: 0;">üìã –î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏</h3>
          <p><strong>–ò–º—è:</strong> ${data.name}</p>
          <p><strong>Email:</strong> ${data.email}</p>
          ${data.company ? `<p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${data.company}</p>` : ''}
          ${data.service ? `<p><strong>–£—Å–ª—É–≥–∞:</strong> ${data.service}</p>` : ''}
        </div>

        <div style="background: #e0f2fe; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #0284c7; margin-top: 0;">üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
          <ul style="color: #374151;">
            <li>–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∏–∑—É—á–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É</li>
            <li>–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</li>
            <li>–°–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π</li>
          </ul>
        </div>

        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ Volingu<br>
            üìß volingutwin@gmail.com
          </p>
        </div>
      </div>
    `

    const result = await resend.emails.send({
      from: 'onboarding@resend.dev',
      to: [data.email],
      subject: 'ü§ñ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ Volingu!',
      html: confirmationHtml,
    })

    console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result.data?.id)
    console.log('üìß –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç Resend (–∫–ª–∏–µ–Ω—Ç):', JSON.stringify(result, null, 2))
    return { success: true, message: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', id: result.data?.id }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error)
    return { success: false, message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è' }
  }
}
